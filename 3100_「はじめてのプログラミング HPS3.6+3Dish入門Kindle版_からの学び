MoonWolf（むーんうるふ）です。書籍からの学びや疑問、ToDoListを残しておくドキュメント

※　随時アップデートする内容とする


「はじめてのプログラミング HPS3.6 + 3Dish入門」　Kindle版


HSP設計者、おにたまさんの視点：

個人が簡単にゲームをつくれる環境を提供したい。

個人が楽しめる物作りスタイル。プログラムの楽しさを発見して欲しい。

※世界観がすごい。個人のクリエイターを包括する能力。それらを盛り上げる能力。おにたまさんのプログラマーの能力と企画力、実行力、すごし。


2D シューティングゲームが作りたい、Lazarus経験者のMoonWolfの視点と発見：

・開発例が豊富、多くの人が既にたくさんの作品を発表している。

・開発のアウトプットの場を提供している　－＞プログラマーの孤独を癒している

・HSPTVブラウザーで、開発者のアウトプットをまとめている。TV化して親しみやすさアップ！



・文法詳細はHPS DOC Library　を読む。かな？
・文法の規則は、英語的に見てもしっかりしているので将来はChatGPT4と連携してプログラムが作成できる予感。
・その前に、一通り文法を学習して、動いている事例より、その使い方を学ぶ期間が必要。

＜文法＞

大文字小文字は区別せず

;がコメント

// コメント

/*
複数行の 
コメント
*/


statement p1, p2

命令１ p1, p2 : 命令２ p3, p4

文字列　"文字列データ"

"C:\\WINDOWS\\SYSTEM"と記述しないと認識されません。 

mes {"
    ここには、1行まるまる直接メッセージを
    書いてもいいです。
"}

数値として記憶できる範囲は、数式で指定できる値と同じ-2147483648から2147483647までの32ビット整数値、 または実数値(64ビット倍精度)です。


型の定義はないが、代入時に型が決定、以下で変換
　　a=int(a)    ; 変数aを数値型にする
    b=str(b)    ; 変数bを文字列型にする
    c=double(c) ; 変数cを実数型にする

dim a,20    ; 変数aの要素は0～19まで使えるようになります、添え字は０から始まる

要素が変わっても同じ変数なので、要素ごとに変数の型を混在させることはできません。
変数aが文字列型ならば、すべての要素も文字列型となります。数値型も同様です。 

文字列型の変数に配列を使う場合にはsdim命令を使います。//文字列の配列は命令が異なる

; 例
    sdim a,32,5  ; 変数aは32文字までの文字列を5つの要素で扱えます
    a(0)="test"
    a(1)="message"

