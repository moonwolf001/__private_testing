#数学的関数で星が関数に従って動くプログラム // MoonWolf in 2024
#なでしこで自分でキャンパスを600ｘ500に設定すること

# 初期設定
黒色に塗色設定。
[0, 0, 600, 500]に四角描画。

# 五芒星を描く関数
●(中心X, 中心Y, 半径)五芒星とは
    黄色に線色設定。
    頂点は[
        [中心X, 中心Y - 半径], # 1: 上
        [中心X + 半径 * SIN(PI * 72 / 180), 中心Y - 半径 * COS(PI * 72 / 180)], # 2: 右上
        [中心X + 半径 * COS(PI * 54 / 180), 中心Y + 半径 * SIN(PI * 54 / 180)], # 3: 右下
        [中心X - 半径 * COS(PI * 54 / 180), 中心Y + 半径 * SIN(PI * 54 / 180)], # 4: 左下
        [中心X - 半径 * SIN(PI * 72 / 180), 中心Y - 半径 * COS(PI * 72 / 180)] # 5: 左上
    ]
    [頂点[0][0], 頂点[0][1]]から[頂点[2][0], 頂点[2][1]]まで線描画。 # 1 -> 3
    [頂点[2][0], 頂点[2][1]]から[頂点[4][0], 頂点[4][1]]まで線描画。 # 3 -> 5
    [頂点[4][0], 頂点[4][1]]から[頂点[1][0], 頂点[1][1]]まで線描画。 # 5 -> 2
    [頂点[1][0], 頂点[1][1]]から[頂点[3][0], 頂点[3][1]]まで線描画。 # 2 -> 4
    [頂点[3][0], 頂点[3][1]]から[頂点[0][0], 頂点[0][1]]まで線描画。 # 4 -> 1
ここまで。

# 座標変換の関数
●(数学的X, 数学的Y)座標変換とは
    画面X = 数学的X + 300 # 画面の中央を原点とする
    画面Y = 250 - 数学的Y # Y軸を逆転させる
    [画面X, 画面Y]を戻す
ここまで

# 五芒星の移動アニメーション
星半径 = 50
数学的X = -300
関数番号 = 1

# 星のY座標を計算する関数
●Y座標計算とは
    もし 関数番号 = 1 ならば
        Y = 0.5 * 数学的X
    違えば もし 関数番号 = 2 ならば
        Y = ABS(数学的X + 100)
    違えば もし 関数番号 = 3 ならば
        Y = 0.005*数学的X^2 - 100
    ここまで
    Yを戻す
ここまで

# 五芒星を左から右に移動させ、端に達したら再び左から移動を始める
(1)の間繰り返す
    黒色に塗色設定。
    [0, 0, 600, 500]に四角描画。 # 画面をクリア
    数学的Y = Y座標計算
    変換結果 = 座標変換(数学的X, 数学的Y)
    画面X = 変換結果[0]
    画面Y = 変換結果[1]
    五芒星(画面X, 画面Y, 星半径)
    # 星の座標を画面の左下に表示
    数学的X整数 = 数学的Xを整数変換
    数学的Y整数 = 数学的Yを整数変換
    「24px sans-serif」に描画フォント設定
    白色に塗り色設定
    座標テキスト = "星の座標（" & 数学的X整数 & " , " & 数学的Y整数 & " )"
    [10, 490]に[座標テキスト]を文字描画
    秒待機(0.01)
    数学的X = 数学的X + 1
    もし 数学的X >= 300 ならば
        数学的X = -300
        関数番号 = 関数番号 + 1
        もし 関数番号 > 3 ならば
            関数番号 = 1
        ここまで
    ここまで
ここまで。
